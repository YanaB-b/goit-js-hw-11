function e(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},t={},o=n.parcelRequired7c6;null==o&&((o=function(e){if(e in r)return r[e].exports;if(e in t){var n=t[e];delete t[e];var o={id:e,exports:{}};return r[e]=o,n.call(o.exports,o,o.exports),o.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,n){t[e]=n},n.parcelRequired7c6=o);var a=o("fZKcF"),s=o("7Y9D8"),i=o("bUYGH");const l={form:document.querySelector(".search-form"),gallery:document.querySelector(".gallery"),guard:document.querySelector(".guard")},c=new(e(a))(".gallery a"),u=new(0,i.default);function f(){return u.getImagesy().then((n=>(p.observe(l.guard),function(n){2===u.page?e(s).Notify.success(`Hooray! We found ${n.totalHits} images.`):n.hits.length<u.perPage&&(p.unobserve(l.guard),e(s).Notify.warning("We're sorry, but you've reached the end of search results."))}(n),n.hits))).then(d).catch(g).finally((()=>{l.form.reset()}))}function d(e){let n="";n=e.map((({webformatURL:e,largeImageURL:n,tags:r,likes:t,views:o,comments:a,downloads:s})=>`<a class="gallery-item" href="${n}">\n    <div class="photo-card">\n  \n    <img class="images" src="${e}" alt="${r}" loading="lazy" width="280" height="180"/>\n    \n<div class="info">\n  <p class="info-item"> <b>Likes</b>\n    <span>${t}</span>\n  </p>\n  <p class="info-item"><b>Views</b> \n    <span>${o}</span>\n  </p>\n  <p class="info-item">\n    <b>Comments</b>\n    <span>${a}</span>\n  </p>\n  <p class="info-item">\n    <b>Downloads</b>\n    <span>${s}</span>\n  </p>\n</div>\n</div></a>`)).join(""),l.gallery.insertAdjacentHTML("beforeend",n),c.refresh()}function g(n){console.log(n),p.unobserve(l.guard),e(s).Notify.failure("Sorry, there are no images matching your search query. Please try again.")}l.form.addEventListener("submit",(function(e){e.preventDefault(),u.q=e.currentTarget.elements.searchQuery.value.trim(),u.resetPage(),l.gallery.innerHTML="",f()}));const p=new IntersectionObserver((function(e){console.log(e),enteries.forEach((e=>{console.log(e.isIntersecting),e.isIntersecting&&f()}))}),{root:null,rootHeight:"300px"});
//# sourceMappingURL=02-scroll.e1b216fe.js.map
