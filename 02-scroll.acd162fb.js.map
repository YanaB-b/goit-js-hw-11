{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAQA,MAAMC,EAAM,CACRC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,MAAOH,SAASC,cAAc,WAI1BG,EAAW,IAAIC,EAAAT,GAAJ,CAAmB,cAC9BU,EAAoB,IAAI,EAAAC,EAAAC,SAe/B,SAASC,IAEL,OAAOH,EACJI,YACAC,MAAKC,IACLC,EAASC,QAAQhB,EAAIK,OAsD7B,SAAsBS,GACW,IAA3BN,EAAkBS,KACxBV,EAAAW,GAASC,OAAOC,QAAQ,oBAAoBN,EAAIO,qBACvCP,EAAIQ,KAAKC,OAASf,EAAkBgB,UAC3CT,EAASU,UAAUzB,EAAIK,OACvBE,EAAAW,GAASC,OAAOO,QACd,8D,CA3DIC,CAAab,GACNA,EAAIQ,QAEXT,KAAKe,GACLC,MAAMC,GACNC,SAAQ,KACP/B,EAAIC,KAAK+B,OAAO,G,CAMxB,SAASJ,EAAcK,GACpB,IAAIC,EAAM,GACVA,EAAMD,EAAOE,KAAI,EAACC,aAACA,EAAYC,cAACA,EAAaC,KAACA,EAAIC,MAACA,EAAKC,MAACA,EAAKC,SAACA,EAAQC,UAACA,KAC/D,iCAAiCL,uEAGfD,WAAsBE,2HAIzCC,qEAGAC,6EAIAC,8EAIAC,yCAKNC,KAAK,IAGP3C,EAAII,QAAQwC,mBAAmB,YAAaV,GAC5C5B,EAASuC,S,CAMb,SAASf,EAAQgB,GACbC,QAAQC,IAAKF,GACb/B,EAASU,UAAUzB,EAAIK,OACvBE,EAAAW,GAASC,OAAO8B,QAAQ,2E,CAtE1BjD,EAAIC,KAAKiD,iBAAiB,UAE1B,SAAkBC,GAChBA,EAAEC,iBAEH5C,EAAkB6C,EAAIF,EAAEG,cAAcC,SAASC,YAAYC,MAAMC,OAGhElD,EAAkBmD,YAyDlB3D,EAAII,QAAQwD,UAAY,GAvDxBjD,G,IAwEJ,MAKMI,EAAW,IAAI8C,sBAErB,SAAkBC,GACdf,QAAQC,IAAIc,GACZA,EAASC,SAAQC,IACbjB,QAAQC,IAAIgB,EAAMC,gBACdD,EAAMC,gBACNtD,GAAe,G,GAZZ,CACfuD,KAAM,KACNC,WAAY","sources":["src/02-index.js"],"sourcesContent":["import simpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport Notiflix from \"notiflix\";\nimport GalleryApiService from \"./NewsApiService\";\n\n\n\nconst ref = {\n    form: document.querySelector(\".search-form\"),\n    gallery: document.querySelector(\".gallery\"),\n    guard: document.querySelector('.guard'),\n  \n  };\n   \n  const lightbox = new simpleLightbox('.gallery a');\n  const galleryApiService = new GalleryApiService();\n\n  ref.form.addEventListener(\"submit\", onSubmit);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    \n   galleryApiService.q = e.currentTarget.elements.searchQuery.value.trim();\n \n\n    galleryApiService.resetPage();\n    clearList();\n    fetchArticles();\n \n }\n function fetchArticles() {\n \n     return galleryApiService\n       .getImages()\n       .then(res => {\n        observer.observe(ref.guard);\n        notification(res);\n        return res.hits;\n       })\n       .then(appendGallery)\n       .catch(onError)\n       .finally(() => {\n         ref.form.reset();\n        \n \n       });\n }\n\n function appendGallery(markup) {\n    let img = '';\n    img = markup.map(({webformatURL,largeImageURL,tags,likes,views,comments,downloads}) =>\n    { return `<a class=\"gallery-item\" href=\"${largeImageURL}\">\n    <div class=\"photo-card\">\n  \n    <img class=\"images\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"280\" height=\"180\"/>\n    \n<div class=\"info\">\n  <p class=\"info-item\"> <b>Likes</b>\n    <span>${likes}</span>\n  </p>\n  <p class=\"info-item\"><b>Views</b> \n    <span>${views}</span>\n  </p>\n  <p class=\"info-item\">\n    <b>Comments</b>\n    <span>${comments}</span>\n  </p>\n  <p class=\"info-item\">\n    <b>Downloads</b>\n    <span>${downloads}</span>\n  </p>\n</div>\n</div></a>`;\n    }\n    ).join('');\n\n\n    ref.gallery.insertAdjacentHTML(\"beforeend\", img);\n    lightbox.refresh();\n  }\n\n  function clearList() {\n    ref.gallery.innerHTML = \"\";\n  }\nfunction onError(err) {\n    console.log (err);\n    observer.unobserve(ref.guard);\n    Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n}\nfunction notification(res) {\n  if (galleryApiService.page === 2)\nNotiflix.Notify.success(`Hooray! We found ${res.totalHits} images.`);\nelse if (res.hits.length < galleryApiService.perPage) {\n  observer.unobserve(ref.guard);\n  Notiflix.Notify.warning(\n    \"We're sorry, but you've reached the end of search results.\"\n  );\n} \n}\nconst scroll = {\nroot: null,\nrootMargin: '300px',\n\n};\nconst observer = new IntersectionObserver(onScroll , scroll);\n\nfunction onScroll(enteries) {\n    console.log(enteries);\n    enteries.forEach(entry => {\n        console.log(entry.isIntersecting);\n        if (entry.isIntersecting) {\n            fetchArticles()\n        }\n    });\n}\n"],"names":["$fZKcF","parcelRequire","$3b039bd7865ff738$var$ref","form","document","querySelector","gallery","guard","$3b039bd7865ff738$var$lightbox","$parcel$interopDefault","$3b039bd7865ff738$var$galleryApiService","$bUYGH","default","$3b039bd7865ff738$var$fetchArticles","getImages","then","res","$3b039bd7865ff738$var$observer","observe","page","$7Y9D8","Notify","success","totalHits","hits","length","perPage","unobserve","warning","$3b039bd7865ff738$var$notification","$3b039bd7865ff738$var$appendGallery","catch","$3b039bd7865ff738$var$onError","finally","reset","markup","img","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","refresh","err","console","log","failure","addEventListener","e","preventDefault","q","currentTarget","elements","searchQuery","value","trim","resetPage","innerHTML","IntersectionObserver","enteries","forEach","entry","isIntersecting","root","rootMargin"],"version":3,"file":"02-scroll.acd162fb.js.map"}